# dependencies: libtiff-dev libmagick++-dev

# List of pkg-config based library dependencies as (library, version) pair or just package name as string (e.g. ('libzmq', '>= 4.3.0') pair or 'libzmq' string). Library package version can be found by running `pkg-config --modversion LIBRARY` command.
dependencies = [
	('libtiff-4', '>= 4.3.0'),
	('Magick++', '>= 6.9.11')
]

def build():
	cpp20 = Environment(
		CXXFLAGS=['-std=c++20'], 
		CCFLAGS=['-Wall', '-Wextra'],
		LIBS = ['tiffxx'])

	cpp20 = configure(cpp20, dependencies)

	cpp20.Program('strip_count.cpp')
	cpp20.Program('tile_count.cpp')
	cpp20.Program('directory_count.cpp')
	cpp20.Program('read_tile.cpp')  # require Magick++ library
	cpp20.Program('tile_info.cpp')
	cpp20.Program('read_strip.cpp')


def configure(env, dependency_list):
	conf = env.Configure(
		custom_tests={'CheckPkgVersion': check_pkg_version})

	for dep in dependency_list:
		pkg = ("%s %s" % dep) if type(dep) == tuple else dep
		if not conf.CheckPkgVersion(pkg):
			print("'%s' library not found" % pkg)
			Exit(1)

	conf_env = conf.Finish()

	pkg_conf = 'pkg-config --cflags --libs ' + ' '.join(
		map(lambda dep: dep[0] if type(dep) == tuple else dep, dependencies))

	conf_env.ParseConfig(pkg_conf)

	return conf_env

def check_pkg_version(context, pkg):
	"""custom pkg-config based package version check"""

	context.Message("Checking for '%s' library ... " % pkg)
	res = context.TryAction("pkg-config --exists '%s'" % pkg)[0]
	context.Result(res)
	return res

build()
