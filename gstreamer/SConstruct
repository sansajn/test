# dependencies: libgstreamer1.0-dev libgstrtspserver-1.0-dev libgtk-3-dev (Debian 10)
AddOption('--with-thread-sanitizer', action='store_true', dest='with_thread_sanitizer', help='build with thread sanitizer enabled' , default=False)

cxx_flags = ['-std=c++17']
link_flags = ['-rdynamic']

if GetOption('with_thread_sanitizer'):
	cxx_flags.append('-fsanitize=thread')
	link_flags.append('-fsanitize=thread')

env = Environment(
	CCFLAGS=['-Wall', '-ggdb3', '-O0'],
	CXXFLAGS=cxx_flags,
	LINKFLAGS=link_flags)

env.ParseConfig('pkg-config --cflags --libs gstreamer-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 gstreamer-rtsp-server-1.0 gtk+-3.0')


env.Program('initialization.cpp')
env.Program('test-readme.c')
env.Program('test-mp4.c')
env.Program('test-multicast.c')
env.Program('test-multicast2.c')

# basic tutorial
env.Program('basic_01.cpp')
env.Program('basic_02.cpp')
env.Program('basic_03.cpp')
env.Program('basic_04.cpp')
env.Program('basic_05.cpp')  # simple GTK GUI
env.Program('basic_09.cpp')  # media discover

# playing tutorial

# tests
env.Program('play.cpp')
env.Program('thread_safe_player.cpp')
env.Program('play_rtsp.cpp')
env.Program('video_parse.cpp')
env.Program('video_capi.cpp')
env.Program('audio_capi.cpp')
env.Program('video_enc.cpp')
env.Program('video_payload.cpp')
env.Program('video_caps.cpp')
env.Program('video_testsrc.cpp')
env.Program('glib_loop.cpp')
env.Program('bus_add_watch_full.cpp')
env.Program('thread_default_context_watch.cpp')
