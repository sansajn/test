env = Environment(
	CXX='clang++', CXXFLAGS=['-std=c++14'], CCFLAGS=['-Wall', '-g', '-O0'])

cpp14_env = env.Clone()

cpp14 = cpp14_env.Clone()
cpp17 = Environment(
	CXX='clang++', CXXFLAGS=['-std=c++17'], CCFLAGS=['-Wall', '-g', '-O0'])

import os  # enable color in output
if 'TERM' in os.environ:
	env['ENV']['TERM'] = os.environ['TERM']

env.Program('set_container.cpp')
env.Program('set_container_sort.cpp')
env.Program('listener_function.cpp')
env.Program('listener_visitor.cpp')
env.Program('istream_iterator_file.cpp')
env.Program('path_tail.cpp')
env.Program('game_fsm.cpp')
env.Program('game_fsm2.cpp')
env.Program('game_fsm3.cpp')
env.Program('crtp.cpp')
env.Program('struct_hier.cpp')
env.Program('ref_to_ptr.cpp')
env.Program('value_proxy.cpp')
env.Program('getline.cpp')

cpp14_env.Program('filter.cpp')
cpp14_env.Program('filter_ptr.cpp')
cpp14_env.Program('pretty_function_macro.cpp')
cpp14_env.Program('file_name_from_file.cpp')
cpp14_env.Program('derived_inner_class.cpp')

cpp14.Program('observer.cpp')
