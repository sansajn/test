env = Environment(
	CXX='clang++',
	CPPFLAGS=['-std=c++11', '-O0', '-g', '-Wall'],
	LIBS=['pthread']
)

import os  # enable color in output for clang
if 'TERM' in os.environ:
	env['ENV']['TERM'] = os.environ['TERM']


env.Program('rand_gen.cpp')
env.Program('random_vals.cpp')
env.Program('uniqueptr.cpp')
env.Program('move_hier.cpp')
#env.Program('fstream_move.cpp')
env.Program('constexpr.cpp')
env.Program('memfunc_ptr.cpp')
env.Program('remove_reference.cpp')
env.Program('union.cpp')
env.Program('find_if.cpp')
env.Program('tuple_compare.cpp')
env.Program('regex_match.cpp')

# right-reference
env.Program('rrefopt.cpp')
env.Program('rref_test.cpp')
env.Program('rvalref_constructor.cpp')

# time
env.Program('utc_time.cpp')

# thread
env.Program('joinable_thread.cpp')

# functional
env.Program('function.cpp')
env.Program('bind.cpp')
env.Program('notify.cpp')
