env = Environment(
	CXXFLAGS=['-std=c++14'], CCFLAGS=['-Wall', '-O0'], CXX='clang++')

import os
if 'TERM' in os.environ:
	env['ENV']['TERM'] = os.environ['TERM']  # enable color output

# theboostcpplibraries.com
env.Program(['1_parse.cpp'])
env.Program(['2_phrase_parse.cpp'])
env.Program(['5_two_digits.cpp'])
env.Program(['6_lexeme.cpp'])
env.Program(['7_similar_to_regex.cpp'])
env.Program(['8_integer.cpp'])
env.Program(['9_actions.cpp'])
env.Program(['11_attributes.cpp'])
env.Program(['12_several_attributes.cpp'])
env.Program(['13_rules.cpp'])
env.Program(['14_nesting_rules.cpp'])
env.Program(['15_grammar.cpp'])
env.Program(['16_parsed_values_in_structures.cpp'])

# boost cookbook
env.Program(['parse_date_time1.cpp'])
env.Program(['parse_date_time2.cpp'])
env.Program(['parsing_input.cpp'])

# oficilny tutorial
env.Program(['num_list1.cpp'])
env.Program(['num_list2.cpp'])
env.Program(['mini_xml1.cpp'])
env.Program(['mini_xml2.cpp'])
env.Program(['mini_xml3.cpp'])

# moje testy
env.Program(['two_int_action.cpp'])
env.Program(['list_of_doubles.cpp'])
env.Program(['list_of_doubles_attrib.cpp'])
env.Program(['display_attribute_type.cpp'])
env.Program(['triplet.cpp'])
env.Program(['qstring.cpp'])
env.Program(['number_pair.cpp'])
env.Program(['debug_parse.cpp'])
env.Program(['joint_record.cpp'])
env.Program(['joint_record_vector.cpp'])
env.Program(['joint_record_from_file.cpp'])
env.Program(['joint_record_istream_iterator.cpp'])
env.Program(['joint_section.cpp'])
env.Program(['mesh_section.cpp'])
env.Program(['parse_comment.cpp'])
